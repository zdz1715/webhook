# App start option
application:
  host: "0.0.0.0" # listen host
  port: 8000 # listen port
  readTimeout: 60s # http read timeout, default: 120s
  writeTimeout: 60s # http write timeout, default: 120s
# Forwarding client
client:
  timeout: 30s # Forwarding timeout. default: 30s
# log option
log:
  dir: "./log" # log dir
  rotate: # log rotate
    # maxSize and maxBackups = 0, File permanent saving
    maxSize: 0 # MB, single file max size
    maxBackups: 0 # file max backups
# webhooks
## template docs: https://pkg.go.dev/text/template
webhooks:
  dingtalk-from-sentry-aimfulbbmldb: # webhook unique name
    url: "" # url, eg: https://oapi.dingtalk.com/robot/send?access_token=xxx
    method: POST
    contentType: application/json # default: application/json
    #    query: # add query
    #      - name: "project"
    #        value: "project is {{ .project }}"
    #    header: # add header
    #      - name: "x-sentry-project"
    #        value: "{{ .project }}"
    # var.*.from: Query, Body, Header, Value. default: Value
    vars: # not support case sensitive keys: docs: https://github.com/spf13/viper#does-viper-support-case-sensitive-keys
      project:
        key: "project"
        from: "Body"
      event:
        key: "event"
        from: "Body"
      culprit:
        key: "culprit"
        from: "Body"
      url:
        key: "url"
        from: "Body"
    body:
      json: '{"msgtype":"markdown","at":{"atMobiles":[]},"markdown":{"title":"sentry报警","text":"> sentry报警 \n - **title:** {{ .event.title }} \n - **level:** {{ .event.level }} \n - **project:** {{ .project }} \n - **user:** {{ .event.user.username }} \n - **browser:** {{ .event.contexts.browser.name }} {{ .event.contexts.browser.version }} \n - **client_os:** {{ .event.contexts.client_os.name  }} {{ .event.contexts.client_os.version  }} \n - **message:** {{ .culprit }} \n - **href:** [url]({{ .url  }})"}}'
#      form:
#        key1: value1
#        key2: value2

